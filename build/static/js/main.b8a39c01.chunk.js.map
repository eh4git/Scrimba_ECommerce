{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","removeEventListener","CartItem","iconClassName","onClick","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","key","setTimeout","console","log","Image","img","some","getClass","i","Photos","imageElements","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8a39c01.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    const [allPhotos, setAllPhotos] = useState([])\n    const [cartItems, setCartItems] = useState([])\n    \n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\n    useEffect(() => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => setAllPhotos(data))\n    }, [])\n    \n    function toggleFavorite(id) {\n        const updatedArr = allPhotos.map(photo => {\n            if(photo.id === id) {\n                return {...photo, isFavorite: !photo.isFavorite}\n            }\n            return photo\n        })\n        \n        setAllPhotos(updatedArr)\n    }\n    \n    function addToCart(newItem) {\n        setCartItems(prevItems => [...prevItems, newItem])\n    }\n    \n    function removeFromCart(id) {\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\n    }\n    \n    function emptyCart() {\n        setCartItems([])\n    }\n    \n    return (\n        <Context.Provider value={{\n            allPhotos, \n            toggleFavorite, \n            cartItems, \n            addToCart, \n            removeFromCart, \n            emptyCart\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport {Context} from \"../Context\"\n\nfunction Header() {\n    const {cartItems} = useContext(Context)\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\n    return (\n        <header>\n            <Link to=\"/\"><h2>Pic Some</h2></Link>\n            <Link to=\"/cart\">\n                <i className={`${cartClassName} ri-fw ri-2x`}></i>\n            </Link>\n        </header>\n    )\n}\n\nexport default Header\n","import {useState, useEffect, useRef} from \"react\"\n\nfunction useHover() {\n    const [hovered, setHovered] = useState(false)\n    \n    const ref = useRef(null);\n    \n    useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter)\n        ref.current.addEventListener(\"mouseleave\", leave)\n        \n        return () => {    \n            ref.current.removeEventListener(\"mouseenter\", enter)\n            ref.current.removeEventListener(\"mouseleave\", leave)\n        }\n    }, [])\n    \n    function enter() {\n        setHovered(true)\n    }\n    \n    function leave() {\n        setHovered(false)\n    }\n    return [hovered, ref]\n}\n\nexport default useHover","import React, {useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Context} from \"../Context\"\nimport useHover from \"../hooks/useHover\"\n\nfunction CartItem({item}) {\n    const {removeFromCart} = useContext(Context)\n    const [hovered, ref] = useHover()\n    \n    const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\n    \n    return (\n        <div className=\"cart-item\">\n            <i \n                className={iconClassName} \n                onClick={() => removeFromCart(item.id)}\n                ref={ref} \n             >\n            </i>\n            \n            <img src={item.url} width=\"130px\" />\n            <p>$5.99</p>\n        </div>\n    )\n}\n\nCartItem.propTypes = {\n    item: PropTypes.shape({\n        url: PropTypes.string.isRequired\n    })\n}\n\nexport default CartItem","import React, {useState, useContext} from \"react\"\nimport {Context} from \"../Context\"\nimport CartItem from \"../components/CartItem\"\n\nfunction Cart() {\n    const [buttonText, setButtonText] = useState(\"Place Order\")\n    const {cartItems, emptyCart} = useContext(Context)\n    const totalCost = 5.99 * cartItems.length\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\n    \n    const cartItemElements = cartItems.map(item => (\n        <CartItem key={item.id} item={item} />\n    ))\n    \n    function placeOrder() {\n        setButtonText(\"Ordering...\")\n        setTimeout(() => {\n            console.log(\"Order placed!\")\n            setButtonText(\"Place Order\")\n            emptyCart()\n        }, 3000)\n    }\n    \n    return (\n        <main className=\"cart-page\">\n            <h1>Check out</h1>\n            {cartItemElements}\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\n            {\n                cartItems.length > 0 ?\n                <div className=\"order-button\">\n                    <button onClick={placeOrder}>{buttonText}</button>\n                </div> :\n                <p>You have no items in your cart.</p>\n            }\n        </main>\n    )\n}\n\nexport default Cart","import React, {useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Context} from \"../Context\"\nimport useHover from \"../hooks/useHover\"\n\nfunction Image({className, img}) {\n    const [hovered, ref] = useHover()\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\n    \n    function heartIcon() {\n        if(img.isFavorite) {\n            return <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(img.id)} ></i>\n        } else if(hovered) {\n            return <i className=\"ri-heart-line favorite\" onClick={() => toggleFavorite(img.id)} ></i>\n        }\n    }\n    \n    function cartIcon() {\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\n        if(alreadyInCart) {\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\n        } else if(hovered) {\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n        }\n    }\n\n    return (\n        <div \n            className={`${className} image-container`}\n            ref={ref}\n        >\n            <img src={img.url} className=\"image-grid\"/>\n            {heartIcon()}\n            {cartIcon()}\n        </div>\n    )\n}\n\nImage.propTypes = {\n    className: PropTypes.string,\n    img: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool\n    })\n}\n\nexport default Image\n","export function getClass(i) {\n    if (i % 5 === 0) {\n        return 'big';\n    }\n    else if (i % 6 === 0) {\n        return 'wide'\n    }\n}","import React, {useContext} from \"react\"\n\nimport Image from \"../components/Image\"\nimport {Context} from \"../Context\"\nimport {getClass} from \"../utils\"\n\nfunction Photos() {\n    const {allPhotos} = useContext(Context)\n    \n    const imageElements = allPhotos.map((img, i) => (\n        <Image key={img.id} img={img} className={getClass(i)} />\n    ))\n    \n    return (\n        <main className=\"photos\">\n            {imageElements}\n        </main>\n    )\n}\n\nexport default Photos","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\n\nimport Header from \"./components/Header\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\n\nfunction App() {    \n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Photos />\n                </Route>\n                \n                <Route path=\"/cart\">\n                    <Cart />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nimport {ContextProvider} from \"./Context\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <ContextProvider>\n        <Router>\n            <App />\n        </Router>\n    </ContextProvider>, \n    document.getElementById(\"root\")\n)"],"sourceRoot":""}