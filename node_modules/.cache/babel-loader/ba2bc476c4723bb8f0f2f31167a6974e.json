{"ast":null,"code":"import { useState, useEffect, useRef } from \"react\";\n\nfunction useHover() {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current.addEventListener(\"mouseenter\", enter);\n    ref.current.addEventListener(\"mouseleave\", leave);\n    return () => {\n      ref.current.removeEventListener(\"mouseenter\", enter);\n      ref.current.removeEventListener(\"mouseleave\", leave);\n    };\n  }, []);\n\n  function enter() {\n    setHovered(true);\n  }\n\n  function leave() {\n    setHovered(false);\n  }\n\n  return [hovered, ref];\n}\n\nexport default useHover;","map":{"version":3,"sources":["C:/Users/hersh/OneDrive/Desktop/Scrimba_ECommerce/src/hooks/useHover.js"],"names":["useState","useEffect","useRef","useHover","hovered","setHovered","ref","current","addEventListener","enter","leave","removeEventListener"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMM,GAAG,GAAGJ,MAAM,CAAC,IAAD,CAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,GAAG,CAACC,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CC,KAA3C;AACAH,IAAAA,GAAG,CAACC,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CE,KAA3C;AAEA,WAAO,MAAM;AACTJ,MAAAA,GAAG,CAACC,OAAJ,CAAYI,mBAAZ,CAAgC,YAAhC,EAA8CF,KAA9C;AACAH,MAAAA,GAAG,CAACC,OAAJ,CAAYI,mBAAZ,CAAgC,YAAhC,EAA8CD,KAA9C;AACH,KAHD;AAIH,GARQ,EAQN,EARM,CAAT;;AAUA,WAASD,KAAT,GAAiB;AACbJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAASK,KAAT,GAAiB;AACbL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACD,SAAO,CAACD,OAAD,EAAUE,GAAV,CAAP;AACH;;AAED,eAAeH,QAAf","sourcesContent":["import {useState, useEffect, useRef} from \"react\"\n\nfunction useHover() {\n    const [hovered, setHovered] = useState(false)\n    \n    const ref = useRef(null);\n    \n    useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter)\n        ref.current.addEventListener(\"mouseleave\", leave)\n        \n        return () => {    \n            ref.current.removeEventListener(\"mouseenter\", enter)\n            ref.current.removeEventListener(\"mouseleave\", leave)\n        }\n    }, [])\n    \n    function enter() {\n        setHovered(true)\n    }\n    \n    function leave() {\n        setHovered(false)\n    }\n    return [hovered, ref]\n}\n\nexport default useHover"]},"metadata":{},"sourceType":"module"}